CREATE TABLE TB_ARTICULOS
            (CODIGO_AR NUMBER(5,0)
            ,DESCRIPCION_AR VARCHAR2(200)
            ,MARCA_AR VARCHAR2(30)
            ,CODIGO_ME NUMBER(3,0)
            ,CODIGO_CA NUMBER(4,0)
            ,FECHA_ING DATE
            ,STOCK_ACTUAL DECIMAL(10,2)
            );  
            
ALTER TABLE TB_MEDIDAS MODIFY (CODIGO_MD NOT NULL)
ALTER TABLE TB_ARTICULOS MODIFY (CODIGO_AR NOT NULL)


ALTER TABLE TB_MEDIDAS MODIFY DESCRIPCION_ME VARCHAR(30)

ALTER TABLE TB_ARTICULOS DROP COLUMN MARCA_AR;

ALTER TABLE TB_ARTICULOS MODIFY CODIGO_AR NUMBER(6,0) DEFAULT 0;

ALTER TABLE TB_CATEGORIAS MODIFY CODIGO_CA NUMBER(4,0) DEFAULT 0;

ALTER TABLE TB_MEDIDAS MODIFY CODIGO_MD NUMBER(3,0) DEFAULT 0;

ALTER TABLE TB_ARTICULOS ADD MARCA_AR VARCHAR2(30);

ALTER TABLE TB_MEDIDAS ADD PRIMARY KEY (CODIGO_MD);

CREATE TABLE TB_ARTICULOS
            (CODIGO_AR NUMBER(5,0)
            ,DESCRIPCION_AR VARCHAR2(200)
            ,MARCA_AR VARCHAR2(30)
            ,CODIGO_ME NUMBER(3,0)
            ,CODIGO_CA NUMBER(4,0)
            ,FECHA_ING DATE
            ,STOCK_ACTUAL DECIMAL(10,2)
            );  
            
ALTER TABLE TB_MEDIDAS MODIFY (CODIGO_MD NOT NULL)
ALTER TABLE TB_ARTICULOS MODIFY (CODIGO_AR NOT NULL)


ALTER TABLE TB_MEDIDAS MODIFY DESCRIPCION_ME VARCHAR(30)

ALTER TABLE TB_ARTICULOS DROP COLUMN MARCA_AR;

ALTER TABLE TB_ARTICULOS MODIFY CODIGO_AR NUMBER(6,0) DEFAULT 0;

ALTER TABLE TB_CATEGORIAS MODIFY CODIGO_CA NUMBER(4,0) DEFAULT 0;

ALTER TABLE TB_MEDIDAS MODIFY CODIGO_MD NUMBER(3,0) DEFAULT 0;

ALTER TABLE TB_ARTICULOS ADD MARCA_AR VARCHAR2(30);

ALTER TABLE TB_MEDIDAS ADD PRIMARY KEY (CODIGO_MD);



ALTER TABLE TB_ARTICULOS
ADD CONSTRAINT FK_01 
FOREIGN KEY (CODIGO_ME) 
REFERENCES TB_MEDIDAS (CODIGO_MD);

ALTER TABLE TB_ARTICULOS
ADD CONSTRAINT FK_02 
FOREIGN KEY (CODIGO_CA) 
REFERENCES TB_CATEGORIAS (CODIGO_CA);

CREATE TABLE TB_ALMACENES(
    CODIGO_AL NUMBER(2,0) GENERATED ALWAYS AS IDENTITY, 
    DESCRIPTION_AL VARCHAR2(30)
);


INSERT INTO TB_CATEGORIAS
            (CODIGO_CA
            ,DESCRIPCION) 
      VALUES(3
            ,'EVENTOS'
            );
            
INSERT INTO TB_MEDIDAS
            (CODIGO_MD
            ,ABREBIATURA_ME
            ,DESCRIPCION_ME) 
      VALUES(1
            ,'UND'
            ,'UNIDADES'
            );
            
INSERT INTO TB_MEDIDAS
            (CODIGO_MD
            ,ABREBIATURA_ME
            ,DESCRIPCION_ME) 
      VALUES(4
            ,'LTS'
            ,'LITROS'
            );
            
            
INSERT INTO TB_ARTICULOS
            (CODIGO_AR
            ,DESCRIPCION_AR
            ,MARCA_AR
            ,CODIGO_ME
            ,CODIGO_CA) 
      VALUES(1
            ,'COMPUTADOR'
            ,'ASUS'
            ,1
            ,3
            );
            
BEGIN
    dbms_output.put_line('Hola mundo');
END;

DECLARE

    v_num NUMBER(2) := 10;
    v_cadena VARCHAR(10) := 'Marco';
    v_fecha DATE := SYSDATE;

BEGIN
    dbms_output.put_line('El valor de v_num es ' || v_num);
    dbms_output.put_line('El valor de v_cadena es ' || v_cadena);
    dbms_output.put_line('El valor de v_fecha es ' || v_fecha);

END;

DECLARE

    v_opl NUMBER(2) := &operando1;
    v_op2 NUMBER(2) := &operando2;
    v_sum NUMBER(3);


BEGIN
    v_sum := v_opl + v_op2;
    dbms_output.put_line(v_opl ||' + ' || v_op2 || ' = ' || v_sum);

END;

DECLARE

    v_nl NUMBER(2) := 10;
    v_n2 NUMBER(2) := 2;


BEGIN
    
    dbms_output.put_line('SUMA ' || (v_nl+v_n2));
    dbms_output.put_line('RESTA ' || (v_nl-v_n2));
    dbms_output.put_line('MULTIPLICACION ' || (v_nl*v_n2));
    dbms_output.put_line('DIVISION ' || (v_nl/v_n2));
    dbms_output.put_line('POTENCIA ' || (v_nl**v_n2));

END;
            
DECLARE
    v_n1 Number(2):= 10;
    v_n2 Number(2):= 4;
    v_n3 Number(2):= 3;
BEGIN

    IF v_n1 >= v_n2 AND v_n1>= v_n3
        THEN
            dbms_output.put_line(v_n1 || ' es el mayor');
        ELSIF v_n2>= v_n3
            THEN
                dbms_output.put_line(v_n2 || ' es el mayor');
        ELSE
            dbms_output.put_line(v_n3 || ' es el mayor');
        END IF;

END;


--- EJEMPLO DE USO DE TIPOS COMO PARAMETRO DE UN PROCEDIMIENTO

CREATE TABLE detalle_factura (
    id_detalle NUMBER GENERATED BY DEFAULT AS IDENTITY,
    producto   VARCHAR2(100),
    cantidad   NUMBER,
    precio     NUMBER
);


CREATE OR REPLACE TYPE t_detalle_factura AS OBJECT (
    producto   VARCHAR2(100),
    cantidad   NUMBER,
    precio     NUMBER
);

CREATE OR REPLACE TYPE t_tabla_detalle_factura AS TABLE OF t_detalle_factura;


CREATE OR REPLACE PROCEDURE insertar_detalle_factura(
    p_detalle IN t_tabla_detalle_factura
) AS
BEGIN
    FORALL i IN 1 .. p_detalle.COUNT
        INSERT INTO detalle_factura
                   (producto
                   ,cantidad
                   ,precio)
            VALUES (p_detalle(i).producto
                   ,p_detalle(i).cantidad
                   ,p_detalle(i).precio
                   );
END;

-- Y SE USARÍA ASÍ
DECLARE
    v_detalles t_tabla_detalle_factura := t_tabla_detalle_factura();
BEGIN
    -- Agregamos 2 registros a la colección
    v_detalles.EXTEND(2);
    v_detalles(1) := t_detalle_factura('Laptop', 2, 1500);
    v_detalles(2) := t_detalle_factura('Mouse', 5, 20);

    -- Llamamos al procedimiento
    insertar_detalle_factura(v_detalles);
    
    SELECT * FROM DETALLE_FACTURA;
END;

CREATE OR REPLACE PROCEDURE sp_Consultar_Empleados_x_Departamento(CodigoD NUMBER)
IS
    TYPE V_Empleados IS TABLE OF EMPLOYEES%ROWTYPE INDEX BY PLS_INTEGER;
    A_Empleados V_Empleados;
BEGIN
    SELECT *
      BULK COLLECT INTO A_Empleados 
      FROM EMPLOYEES
      WHERE department_id = CodigoD;
      
    FOR i IN 1..A_Empleados.COUNT LOOP
        dbms_output.put_line(A_Empleados(i).FIRST_NAME || ' ' || A_Empleados(i).LAST_NAME );
    END LOOP;
END;
/
EXECUTE sp_Consultar_Empleados_x_Departamento(100);

/

SET SERVEROUTPUT ON;

DECLARE
    TYPE vArray1 is VARRAY(10) OF VARCHAR2(50);
    
    myArray vArray1 := vArray1('INFORMATICA','MATEMATICAS','BIOLOGIA','LITERATURA');
BEGIN
    FOR i IN 1..4
    LOOP
        DBMS_OUTPUT.PUT_LINE(myArray(i));
    END LOOP;
    
 DBMS_OUTPUT.PUT_LINE('-----------------------------------------');
    
    myArray.EXTEND(2);
    myarray(5) := 'FISICA';
    myarray(6) := 'QUIMICA';
    
    FOR i IN 1..6
    LOOP
        DBMS_OUTPUT.PUT_LINE(myArray(i));
    END LOOP;

END;

